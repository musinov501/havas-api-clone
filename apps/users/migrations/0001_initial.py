# Generated by Django 5.2.7 on 2025-10-28 18:54

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version', models.CharField(max_length=100)),
                ('force_update', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('description', models.TextField(default='')),
                ('device_type', models.CharField(choices=[('IOS', 'iOS'), ('ANDROID', 'Android'), ('ALL', 'ALL')], db_index=True, default='ALL', max_length=7)),
            ],
            options={
                'verbose_name': 'app version',
                'verbose_name_plural': 'app versions',
                'db_table': 'appversion',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(blank=True, db_index=True, max_length=255, null=True, unique=True)),
                ('username', models.CharField(blank=True, db_index=True, max_length=150, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, db_index=True, max_length=17, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=64, null=True)),
                ('last_name', models.CharField(blank=True, max_length=64, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=64, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_model', models.CharField(db_index=True, max_length=255)),
                ('operation_version', models.CharField(max_length=155)),
                ('device_type', models.CharField(choices=[('IOS', 'iOS'), ('ANDROID', 'Android'), ('ALL', 'ALL')], db_index=True, default='ANDROID', max_length=7)),
                ('device_id', models.CharField(db_index=True, help_text='Unique device identifier', max_length=255, unique=True)),
                ('ip_address', models.GenericIPAddressField(help_text='IP address of the device', validators=[django.core.validators.validate_ipv46_address])),
                ('last_login', models.DateTimeField(auto_now=True, db_index=True)),
                ('first_login', models.DateTimeField(auto_now_add=True)),
                ('visit_location', models.JSONField(blank=True, help_text='Geographic location data', null=True)),
                ('language', models.CharField(choices=[('RU', 'Russian'), ('EN', 'English'), ('CRL', 'Cyrillic'), ('UZ', 'Uzbek')], default='CRL', max_length=3)),
                ('theme', models.CharField(choices=[('DARK', 'Dark'), ('LIGHT', 'Light')], default='LIGHT', max_length=5)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Device session is active')),
                ('is_push_notification', models.BooleanField(default=True, verbose_name='Push Notifications Enabled')),
                ('is_auth_password', models.BooleanField(default=False, verbose_name='Biometric Authentication Enabled')),
                ('device_token', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('logged_out_at', models.DateTimeField(blank=True, help_text='When user logged out from this device', null=True)),
                ('firebase_token', models.CharField(blank=True, db_index=True, max_length=500, null=True, unique=True)),
                ('app_version', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devices', to='users.appversion')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
                'db_table': 'devices',
                'ordering': ['-last_login'],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='users_username_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone_number'], name='users_phone_idx'),
        ),
        migrations.AddConstraint(
            model_name='user',
            constraint=models.CheckConstraint(condition=models.Q(('email__isnull', False), ('username__isnull', False), ('phone_number__isnull', False), _connector='OR'), name='user_must_have_identifier'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['user', 'is_active'], name='device_user_active_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['device_id', 'device_type'], name='device_id_type_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['-last_login'], name='device_last_login_idx'),
        ),
    ]
